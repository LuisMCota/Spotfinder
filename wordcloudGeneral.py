# -*- coding: utf-8 -*-
"""wordCloud.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1juyojD7cgHJZBiOCuBPUhVIAcFkL5J_1
"""

#!pip install wordcloud stop-words

import pandas as pd
from wordcloud import WordCloud
import matplotlib.pyplot as plt
from stop_words import get_stop_words

data = pd.read_csv(r"C:\Users\cesco\Desktop\Personal\UPY\7\IoT\datos_y_comentarios_merida_norte.xlsx - Places.csv")

# Obtener una lista de palabras comunes en español para excluir de la nube de palabras
stopwords = get_stop_words('spanish')

#E xtraer la columna 'Comentarios' del DataFrame, exceptuando los valores nulos
comentarios = data['Comentarios'].dropna()

# Filtrar las palabras para incluir solo aquellas que son alfanuméricas, eliminando números y caracteres especiales
words_alnum = [word for comment in comentarios for word in comment.split() if word.isalnum()]

# Convertir todas las palabras a minúsculas para normalizarlas y excluir las que se encuentren en la lista de palabras comunes
words_cleaned = [word.lower() for word in words_alnum if word.lower() not in stopwords]

# Unir todas las palabras limpias en un solo texto para generar la nube de palabras
texto_limpiado = ' '.join(words_cleaned)

# Crear el wordcloud, configurando tamaño, color, y el numero maximo de palabras
wordcloud_limpio = WordCloud(width=1200, height=600, background_color ='white', max_words=500).generate(texto_limpiado)

# Mostrar el wordcloud
plt.figure(figsize=(15, 7.5))
plt.imshow(wordcloud_limpio, interpolation='bilinear')
plt.axis('off')
plt.show()